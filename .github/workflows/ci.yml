name: ci

on:
  push:
    branches: [main]
    tags: ['**']
  pull_request:
    branches: [main]

permissions:
  contents: write
  pull-requests: write

env:
  COLUMNS: 120

jobs:
  lint:
    uses: ./.github/workflows/ci-lint.yml
    secrets: inherit

  build-wheels:
    uses: ./.github/workflows/ci-build.yml
    secrets: inherit

  build-docs:
    uses: ./.github/workflows/ci-docs.yml
    secrets: inherit

  test:
    uses: ./.github/workflows/ci-test.yml
    secrets: inherit

  check:  # This job does nothing and is only used for the branch protection
    if: always()
    outputs:
      result: ${{ steps.all-green.outputs.result }}
    needs:
      - lint
      - build-wheels
      - build-docs
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        id: all-green
        with:
          jobs: ${{ toJSON(needs) }}

  # # release:
  # #   needs: [check]
  # #   if: needs.check.outputs.result == 'success' && startsWith(github.ref, 'refs/tags/')
  # #   runs-on: ubuntu-latest
  # #   environment: release

  # #   permissions:
  # #     id-token: write

  # #   outputs:
  # #     pydantic-version: ${{ steps.check-tag.outputs.VERSION }}

  # #   steps:
  # #     - uses: actions/checkout@v4

  # #     - uses: actions/setup-python@v5
  # #       with:
  # #         python-version: '3.12'

  # #     - name: Install 'build' library
  # #       run: pip install -U build

  # #     - name: Check version
  # #       id: check-tag
  # #       uses: samuelcolvin/check-python-version@v4.1
  # #       with:
  # #         version_file_path: pydantic/version.py

  # #     - name: Build library
  # #       run: python -m build

  # #     - name: Upload package to PyPI
  # #       uses: pypa/gh-action-pypi-publish@release/v1
